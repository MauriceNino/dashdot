"use strict";(self.webpackChunkdashdot=self.webpackChunkdashdot||[]).push([[893],{3742:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>d,toc:()=>u});var a=n(3117),o=n(102),i=(n(7294),n(3905)),r=["components"],l={sidebar_position:2,description:"Features that only have an effect on the functionality of the app",tags:["Configuration"]},s="Features",d={unversionedId:"config/features",id:"config/features",title:"Features",description:"Features that only have an effect on the functionality of the app",source:"@site/docs/config/features.mdx",sourceDirName:"config",slug:"/config/features",permalink:"/docs/config/features",draft:!1,editUrl:"https://github.com/MauriceNino/dashdot/edit/main/apps/docs/docs/config/features.mdx",tags:[{label:"Configuration",permalink:"/docs/tags/configuration"}],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,description:"Features that only have an effect on the functionality of the app",tags:["Configuration"]},sidebar:"tutorialSidebar",previous:{title:"UI Features",permalink:"/docs/config/ui-features"},next:{title:"Server",permalink:"/docs/config/widget-specific/server"}},p={},u=[{value:"<code>DASHDOT_PORT</code>",id:"dashdot_port",level:2},{value:"<code>DASHDOT_ACCEPT_OOKLA_EULA</code>",id:"dashdot_accept_ookla_eula",level:2},{value:"<code>DASHDOT_USE_NETWORK_INTERFACE</code>",id:"dashdot_use_network_interface",level:2},{value:"<code>DASHDOT_SPEED_TEST_FROM_PATH</code>",id:"dashdot_speed_test_from_path",level:2},{value:"<code>DASHDOT_FS_DEVICE_FILTER</code>",id:"dashdot_fs_device_filter",level:2},{value:"<code>DASHDOT_FS_TYPE_FILTER</code>",id:"dashdot_fs_type_filter",level:2},{value:"<code>DASHDOT_FS_VIRTUAL_MOUNTS</code>",id:"dashdot_fs_virtual_mounts",level:2},{value:"<code>DASHDOT_DISABLE_INTEGRATIONS</code>",id:"dashdot_disable_integrations",level:2}],c={toc:u};function h(e){var t=e.components,n=(0,o.Z)(e,r);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"features"},"Features"),(0,i.kt)("h2",{id:"dashdot_port"},(0,i.kt)("inlineCode",{parentName:"h2"},"DASHDOT_PORT")),(0,i.kt)("p",null,"The port where the express backend is running (the backend serves the frontend, so it is the same port for both)."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"type: ",(0,i.kt)("inlineCode",{parentName:"li"},"number")),(0,i.kt)("li",{parentName:"ul"},"default: ",(0,i.kt)("inlineCode",{parentName:"li"},"3001"))),(0,i.kt)("h2",{id:"dashdot_accept_ookla_eula"},(0,i.kt)("inlineCode",{parentName:"h2"},"DASHDOT_ACCEPT_OOKLA_EULA")),(0,i.kt)("p",null,"Use the newer and more accurate ",(0,i.kt)("inlineCode",{parentName:"p"},"speedtest")," tool from Ookla, instead of the old ",(0,i.kt)("inlineCode",{parentName:"p"},"speedtest-cli")," for your speedtests.\nWhen passing this flag, you accept Ooklas: ",(0,i.kt)("a",{parentName:"p",href:"https://www.speedtest.net/about/eula"},"EULA"),", ",(0,i.kt)("a",{parentName:"p",href:"https://www.speedtest.net/about/terms"},"TERMS")," and ",(0,i.kt)("a",{parentName:"p",href:"https://www.speedtest.net/about/privacy"},"PRIVACY"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"type: ",(0,i.kt)("inlineCode",{parentName:"li"},"boolean")),(0,i.kt)("li",{parentName:"ul"},"default: ",(0,i.kt)("inlineCode",{parentName:"li"},"false"))),(0,i.kt)("h2",{id:"dashdot_use_network_interface"},(0,i.kt)("inlineCode",{parentName:"h2"},"DASHDOT_USE_NETWORK_INTERFACE")),(0,i.kt)("p",null,"If dash. detects the wrong gateway as your default interface, you can provide a name here that is used instead."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string")),(0,i.kt)("li",{parentName:"ul"},"default: ",(0,i.kt)("inlineCode",{parentName:"li"},"unset"))),(0,i.kt)("h2",{id:"dashdot_speed_test_from_path"},(0,i.kt)("inlineCode",{parentName:"h2"},"DASHDOT_SPEED_TEST_FROM_PATH")),(0,i.kt)("p",null,"You can provide a local file-path from where dash. should read its speed-test results.\nThis is also useful, if you want to disable speed-tests, as you can just pass a maximum value for your network graphs\nand then disable the ",(0,i.kt)("inlineCode",{parentName:"p"},"Speed (Up)")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Speed (Down)")," labels in your network widget."),(0,i.kt)("p",null,"The file that is being read, should have the following format (you will need to remove the comments):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "unit": "byte", // can either be "bit" or "byte"\n  "speedDown": 150000000, // values need to be in the unit provided above\n  "speedUp": 50000000,\n  "publicIp": "123.123.123.123" // optional\n}\n')),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Note: If you are running dash. using Docker, you will have to prepend your file path with ",(0,i.kt)("inlineCode",{parentName:"p"},"/mnt/host"))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string")),(0,i.kt)("li",{parentName:"ul"},"default: ",(0,i.kt)("inlineCode",{parentName:"li"},"unset"))),(0,i.kt)("h2",{id:"dashdot_fs_device_filter"},(0,i.kt)("inlineCode",{parentName:"h2"},"DASHDOT_FS_DEVICE_FILTER")),(0,i.kt)("p",null,"To hide specific drives, you can pass the device names as a string list using this parameter.\nIf you don't know the device names of your drives, have a look at the log of dash. and look for the ",(0,i.kt)("inlineCode",{parentName:"p"},"Static Server Info -> storage")," output."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"storage: {\n  layout: [\n    {\n      // highlight-next-line\n      device: 'nvme0n1',\n      brand: 'Samsung',\n      size: 500107862016,\n      type: 'NVMe',\n      raidGroup: '',\n    },\n    {\n      // highlight-next-line\n      device: 'sda',\n      brand: 'DELL',\n      size: 4000225165312,\n      type: 'HD',\n      raidGroup: '',\n    },\n  ];\n}\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string (comma separated list)")),(0,i.kt)("li",{parentName:"ul"},"default: ",(0,i.kt)("inlineCode",{parentName:"li"},"unset"))),(0,i.kt)("h2",{id:"dashdot_fs_type_filter"},(0,i.kt)("inlineCode",{parentName:"h2"},"DASHDOT_FS_TYPE_FILTER")),(0,i.kt)("p",null,"If dash. detects network drives as internal drives, you can provide a list of ignored FS types here.\nPlease also create a ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/MauriceNino/dashdot/issues/new/choose"},"bug ticket")," on the\nrepository though, so that we can fix this problem for everyone."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string (comma separated list)")),(0,i.kt)("li",{parentName:"ul"},"default: ",(0,i.kt)("inlineCode",{parentName:"li"},"cifs,9p,fuse.rclone,fuse.mergerfs,nfs4,iso9660"))),(0,i.kt)("h2",{id:"dashdot_fs_virtual_mounts"},(0,i.kt)("inlineCode",{parentName:"h2"},"DASHDOT_FS_VIRTUAL_MOUNTS")),(0,i.kt)("p",null,"If you want to show a virtual mount in the storage split view, that is ignored in the filter above.\nCan be used for example to show ",(0,i.kt)("inlineCode",{parentName:"p"},"fuse.mergerfs")," mounts, which is basically a grouping of other mounts."),(0,i.kt)("p",null,"You need to pass the names of the filesystems you want to use. To find out what the name is, execute ",(0,i.kt)("inlineCode",{parentName:"p"},"df"),"\nand look at the first column."),(0,i.kt)("p",null,"Note that this will only be shown in the storage split view (enabled with the\n",(0,i.kt)("a",{parentName:"p",href:"./ui-features#dashdot_enable_storage_split_view"},(0,i.kt)("inlineCode",{parentName:"a"},"DASHDOT_ENABLE_STORAGE_SPLIT_VIEW"))," flag).\nThe normal pie chart will not be affected and there will also be no disk shown in the list of the storage\nwidget."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string (comma separated list)")),(0,i.kt)("li",{parentName:"ul"},"default: ",(0,i.kt)("inlineCode",{parentName:"li"},"unset"))),(0,i.kt)("h2",{id:"dashdot_disable_integrations"},(0,i.kt)("inlineCode",{parentName:"h2"},"DASHDOT_DISABLE_INTEGRATIONS")),(0,i.kt)("p",null,"Disables support for integrations. This does two things: disable CORS and disable open API endpoints."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"type: ",(0,i.kt)("inlineCode",{parentName:"li"},"boolean")),(0,i.kt)("li",{parentName:"ul"},"default: ",(0,i.kt)("inlineCode",{parentName:"li"},"false"))))}h.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=d(n),h=o,f=c["".concat(s,".").concat(h)]||c[h]||u[h]||i;return n?a.createElement(f,r(r({ref:t},p),{},{components:n})):a.createElement(f,r({ref:t},p))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var d=2;d<i;d++)r[d]=n[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"}}]);